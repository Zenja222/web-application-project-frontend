Index: src/logo.svg
===================================================================
diff --git a/src/logo.svg b/src/logo.svg
deleted file mode 100644
--- a/src/logo.svg	
+++ /dev/null	
@@ -1,1 +0,0 @@
-<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 841.9 595.3"><g fill="#61DAFB"><path d="M666.3 296.5c0-32.5-40.7-63.3-103.1-82.4 14.4-63.6 8-114.2-20.2-130.4-6.5-3.8-14.1-5.6-22.4-5.6v22.3c4.6 0 8.3.9 11.4 2.6 13.6 7.8 19.5 37.5 14.9 75.7-1.1 9.4-2.9 19.3-5.1 29.4-19.6-4.8-41-8.5-63.5-10.9-13.5-18.5-27.5-35.3-41.6-50 32.6-30.3 63.2-46.9 84-46.9V78c-27.5 0-63.5 19.6-99.9 53.6-36.4-33.8-72.4-53.2-99.9-53.2v22.3c20.7 0 51.4 16.5 84 46.6-14 14.7-28 31.4-41.3 49.9-22.6 2.4-44 6.1-63.6 11-2.3-10-4-19.7-5.2-29-4.7-38.2 1.1-67.9 14.6-75.8 3-1.8 6.9-2.6 11.5-2.6V78.5c-8.4 0-16 1.8-22.6 5.6-28.1 16.2-34.4 66.7-19.9 130.1-62.2 19.2-102.7 49.9-102.7 82.3 0 32.5 40.7 63.3 103.1 82.4-14.4 63.6-8 114.2 20.2 130.4 6.5 3.8 14.1 5.6 22.5 5.6 27.5 0 63.5-19.6 99.9-53.6 36.4 33.8 72.4 53.2 99.9 53.2 8.4 0 16-1.8 22.6-5.6 28.1-16.2 34.4-66.7 19.9-130.1 62-19.1 102.5-49.9 102.5-82.3zm-130.2-66.7c-3.7 12.9-8.3 26.2-13.5 39.5-4.1-8-8.4-16-13.1-24-4.6-8-9.5-15.8-14.4-23.4 14.2 2.1 27.9 4.7 41 7.9zm-45.8 106.5c-7.8 13.5-15.8 26.3-24.1 38.2-14.9 1.3-30 2-45.2 2-15.1 0-30.2-.7-45-1.9-8.3-11.9-16.4-24.6-24.2-38-7.6-13.1-14.5-26.4-20.8-39.8 6.2-13.4 13.2-26.8 20.7-39.9 7.8-13.5 15.8-26.3 24.1-38.2 14.9-1.3 30-2 45.2-2 15.1 0 30.2.7 45 1.9 8.3 11.9 16.4 24.6 24.2 38 7.6 13.1 14.5 26.4 20.8 39.8-6.3 13.4-13.2 26.8-20.7 39.9zm32.3-13c5.4 13.4 10 26.8 13.8 39.8-13.1 3.2-26.9 5.9-41.2 8 4.9-7.7 9.8-15.6 14.4-23.7 4.6-8 8.9-16.1 13-24.1zM421.2 430c-9.3-9.6-18.6-20.3-27.8-32 9 .4 18.2.7 27.5.7 9.4 0 18.7-.2 27.8-.7-9 11.7-18.3 22.4-27.5 32zm-74.4-58.9c-14.2-2.1-27.9-4.7-41-7.9 3.7-12.9 8.3-26.2 13.5-39.5 4.1 8 8.4 16 13.1 24 4.7 8 9.5 15.8 14.4 23.4zM420.7 163c9.3 9.6 18.6 20.3 27.8 32-9-.4-18.2-.7-27.5-.7-9.4 0-18.7.2-27.8.7 9-11.7 18.3-22.4 27.5-32zm-74 58.9c-4.9 7.7-9.8 15.6-14.4 23.7-4.6 8-8.9 16-13 24-5.4-13.4-10-26.8-13.8-39.8 13.1-3.1 26.9-5.8 41.2-7.9zm-90.5 125.2c-35.4-15.1-58.3-34.9-58.3-50.6 0-15.7 22.9-35.6 58.3-50.6 8.6-3.7 18-7 27.7-10.1 5.7 19.6 13.2 40 22.5 60.9-9.2 20.8-16.6 41.1-22.2 60.6-9.9-3.1-19.3-6.5-28-10.2zM310 490c-13.6-7.8-19.5-37.5-14.9-75.7 1.1-9.4 2.9-19.3 5.1-29.4 19.6 4.8 41 8.5 63.5 10.9 13.5 18.5 27.5 35.3 41.6 50-32.6 30.3-63.2 46.9-84 46.9-4.5-.1-8.3-1-11.3-2.7zm237.2-76.2c4.7 38.2-1.1 67.9-14.6 75.8-3 1.8-6.9 2.6-11.5 2.6-20.7 0-51.4-16.5-84-46.6 14-14.7 28-31.4 41.3-49.9 22.6-2.4 44-6.1 63.6-11 2.3 10.1 4.1 19.8 5.2 29.1zm38.5-66.7c-8.6 3.7-18 7-27.7 10.1-5.7-19.6-13.2-40-22.5-60.9 9.2-20.8 16.6-41.1 22.2-60.6 9.9 3.1 19.3 6.5 28.1 10.2 35.4 15.1 58.3 34.9 58.3 50.6-.1 15.7-23 35.6-58.4 50.6zM320.8 78.4z"/><circle cx="420.9" cy="296.5" r="45.7"/><path d="M520.5 78.1z"/></g></svg>
\ No newline at end of file
Index: src/components/Bookings/BookingForm.css
===================================================================
diff --git a/src/components/Bookings/BookingForm.css b/src/components/Bookings/BookingForm.css
new file mode 100644
--- /dev/null	
+++ b/src/components/Bookings/BookingForm.css	
@@ -0,0 +1,3 @@
+.input-wrapper {
+    min-height: 80px;
+}
\ No newline at end of file
Index: src/components/common/Navbar/INavbar.js
===================================================================
diff --git a/src/components/common/Navbar/INavbar.js b/src/components/common/Navbar/INavbar.js
new file mode 100644
--- /dev/null	
+++ b/src/components/common/Navbar/INavbar.js	
@@ -0,0 +1,23 @@
+import {Container, Nav, Navbar} from "react-bootstrap";
+import {ALL_BOOKINGS_VIEW_PATH, ALL_ROOMS_VIEW_PATH} from "../../../routes/Routes";
+import {Link} from "react-router-dom";
+
+
+function INavbar() {
+    return (
+        <Navbar expand="lg" className="bg-body-tertiary">
+            <Container>
+                <Link to="/" className="navbar-brand">Best Booking App</Link>
+                <Navbar.Toggle aria-controls="basic-navbar-nav" />
+                <Navbar.Collapse id="basic-navbar-nav">
+                    <Nav className="me-auto">
+                        <Link className="nav-link me-4" to={ALL_BOOKINGS_VIEW_PATH}>Bookings</Link>
+                        <Link className="nav-link" to={ALL_ROOMS_VIEW_PATH}>Rooms</Link>
+                    </Nav>
+                </Navbar.Collapse>
+            </Container>
+        </Navbar>
+    );
+}
+
+export default INavbar;
Index: src/routes/Routes.js
===================================================================
diff --git a/src/routes/Routes.js b/src/routes/Routes.js
new file mode 100644
--- /dev/null	
+++ b/src/routes/Routes.js	
@@ -0,0 +1,40 @@
+import {createBrowserRouter} from "react-router-dom";
+import App from "../App";
+import AllBookingView from "../view/Bookings/AllBookingView";
+import AllRoomsView from "../view/Rooms/AllRoomsView";
+import BookingEditView from "../view/Bookings/BookingEdtiView";
+import BookingAddView from "../view/Bookings/BookingAddView";
+
+export const ALL_BOOKINGS_VIEW_PATH = "/bookings";
+export const BOOKING_EDIT_VIEW_PATH = "/booking/:bookingId/edit"
+export const ALL_ROOMS_VIEW_PATH = "/rooms";
+export const BOOKING_ADD_VIEW_PATH = "/booking/add";
+
+const router = createBrowserRouter([
+    {
+        path: "/",
+        element: <App/>,
+        children: [
+            {
+                path: ALL_ROOMS_VIEW_PATH,
+                element: <AllRoomsView/>
+            },
+            {
+                path: ALL_BOOKINGS_VIEW_PATH,
+                element: <AllBookingView/>
+            },
+            {
+                path: BOOKING_EDIT_VIEW_PATH,
+                element: <BookingEditView/>
+            },
+            {
+                path: BOOKING_ADD_VIEW_PATH,
+                element: <BookingAddView/>
+            },
+        ]
+    },
+
+]);
+
+
+export default router;
\ No newline at end of file
Index: src/view/Bookings/AllBookingView.js
===================================================================
diff --git a/src/view/Bookings/AllBookingView.js b/src/view/Bookings/AllBookingView.js
new file mode 100644
--- /dev/null	
+++ b/src/view/Bookings/AllBookingView.js	
@@ -0,0 +1,54 @@
+import {useEffect, useState} from "react";
+import {Col, Row, Spinner} from "react-bootstrap";
+import {deleteBookingById, getAllBookings} from "../../client/BookingApiClient";
+import BookingsCard from "../../components/Bookings/BookingsCard";
+import {useNavigate} from "react-router-dom";
+
+function AllBookingView() {
+
+    const [bookings, setBookings] = useState();
+
+    const navigate = useNavigate();
+
+    const handleBookingEdit = (id) => {
+        navigate(`/booking/${id}/edit`);
+    }
+
+
+    const handleBookingDelete = async (id) => {
+        await deleteBookingById(id)
+        setBookings((prev) => {
+            return  prev.filter(product => product.id !== id)
+        })
+    }
+
+    const loadBookings = async () => {
+        setBookings(await getAllBookings())
+    }
+
+    useEffect(() => {
+        loadBookings()
+    }, [])
+
+    return (
+        <Row className="justify-content-center">
+            {bookings ?
+                (<>{bookings.map(booking => {
+                    return (
+                        <Col key={`product-card-${booking.id}`} sm={12} md={4}
+                             className="d-flex justify-content-center">
+                            <div className="mt-4">
+                                <BookingsCard handleOnEdit={handleBookingEdit} handleOnDelete={handleBookingDelete}
+                                              booking={booking} />
+                            </div>
+                        </Col>
+                    );
+                })}
+                </>)
+                : (<Spinner animation="border"/>)}
+
+        </Row>
+    );
+}
+
+export default AllBookingView;
Index: src/components/common/MainPage/MainPage.js
===================================================================
diff --git a/src/components/common/MainPage/MainPage.js b/src/components/common/MainPage/MainPage.js
new file mode 100644
--- /dev/null	
+++ b/src/components/common/MainPage/MainPage.js	
@@ -0,0 +1,29 @@
+import React from 'react';
+import Image from 'react-bootstrap/Image';
+import { Button } from "react-bootstrap";
+import './MainPage.css';
+import {useNavigate} from "react-router-dom";
+
+function MainPage() {
+
+    const navigate = useNavigate();
+
+    const handleBookingPost = async () => {
+        navigate('/booking/add')
+    }
+
+    return (
+        <div>
+            <Image src="https://t4.ftcdn.net/jpg/02/65/26/83/360_F_265268314_LmykO3vrtzmh3TQbBdnxj9vUczqqJXCU.jpg"
+                   style={{width: '100%', height: '400px'}}/>
+            <h1 className='bb-app' style={{paddingTop: '40px', textAlign: 'center'}}>
+                Best Booking App
+            </h1>
+            <div className="text-center" style={{ marginTop: '20px' }}>
+                <Button  onClick={() => handleBookingPost()} variant="primary" size='lg'>Book hotel </Button>
+            </div>
+        </div>
+    );
+}
+
+export default MainPage;
Index: src/client/BookingApiClient.js
===================================================================
diff --git a/src/client/BookingApiClient.js b/src/client/BookingApiClient.js
new file mode 100644
--- /dev/null	
+++ b/src/client/BookingApiClient.js	
@@ -0,0 +1,20 @@
+import axios from "axios";
+export const getAllBookings = async () => {
+    return (await axios.get(`/booking`)).data
+}
+
+export const deleteBookingById = async (id) => {
+    return (await axios.delete(`/booking/${id}`)).data
+}
+
+export const getBookingById = async (id) => {
+    return (await axios.get(`/booking/${id}`)).data
+}
+
+export const updateBooking = async (booking) => {
+    return (await axios.put(`/booking/${booking.id}`, booking))
+}
+
+export const addBooking = async (bookingData) => {
+    return (await axios.post('/booking', bookingData)).data
+}
\ No newline at end of file
Index: src/view/Bookings/BookingEdtiView.js
===================================================================
diff --git a/src/view/Bookings/BookingEdtiView.js b/src/view/Bookings/BookingEdtiView.js
new file mode 100644
--- /dev/null	
+++ b/src/view/Bookings/BookingEdtiView.js	
@@ -0,0 +1,48 @@
+import { useEffect, useState } from "react";
+import { Spinner, Toast, ToastContainer } from "react-bootstrap";
+import { useParams } from "react-router-dom";
+import BookingEditForm from "../../components/Bookings/BookingEditForm";
+import { getBookingById, updateBooking } from "../../client/BookingApiClient";
+import EditedSuccessToast from "../../components/common/Toasts/EditedSuccessToast";
+
+function BookingEditView() {
+    const [booking, setBooking] = useState({});
+    const [showToast, setShowToast] = useState(false);
+    const { bookingId } = useParams();
+
+    useEffect(() => {
+        const fetchBooking = async () => {
+            const fetchedBooking = await getBookingById(bookingId);
+            setBooking(fetchedBooking);
+        };
+
+        fetchBooking();
+    }, [bookingId]);
+
+    const handleBookingUpdate = async (booking) => {
+        try {
+            console.log('call the api');
+            const updatedBooking = await updateBooking(booking);
+            console.log(updatedBooking);
+            setShowToast(true);
+        } catch (error) {
+            console.error("Error updating booking:", error);
+        }
+    };
+
+    return (
+        <div className="text-center">
+            <ToastContainer position="top-end" className="p-3" style={{ zIndex: 1 }}>
+                <EditedSuccessToast show={showToast} onClose={() =>setShowToast(false)} />
+            </ToastContainer>
+
+            {Object.keys(booking).length > 0 ? (
+                <BookingEditForm handleBookingUpdate={handleBookingUpdate} booking={booking} />
+            ) : (
+                <Spinner animation="border" />
+            )}
+        </div>
+    );
+}
+
+export default BookingEditView;
Index: src/client/RoomApiClient.jsx
===================================================================
diff --git a/src/client/RoomApiClient.jsx b/src/client/RoomApiClient.jsx
new file mode 100644
--- /dev/null	
+++ b/src/client/RoomApiClient.jsx	
@@ -0,0 +1,9 @@
+import axios from "axios";
+
+export const getAllRooms = async () => {
+    return (await axios.get(`/rooms`)).data
+}
+
+export const deleteRoomById = async (id) => {
+    return (await axios.delete(`/rooms/${id}`)).data
+}
\ No newline at end of file
Index: src/components/Bookings/BookingEditForm.js
===================================================================
diff --git a/src/components/Bookings/BookingEditForm.js b/src/components/Bookings/BookingEditForm.js
new file mode 100644
--- /dev/null	
+++ b/src/components/Bookings/BookingEditForm.js	
@@ -0,0 +1,64 @@
+import {Field, Form, Formik} from "formik";
+import * as Yup from 'yup';
+import "./BookingForm.css"
+import {Button, Col, Row} from "react-bootstrap";
+
+function BookingEditForm({handleBookingUpdate, booking}) {
+
+
+    const SignupSchema = Yup.object().shape({
+        roomId: Yup.number()
+            .min(0, "Cannot be negative")
+            .required('Required'),
+        guestId: Yup.number()
+            .min(0, "Cannot be negative")
+            .required('Required')
+    });
+
+    const handleSubmit = (values) => {
+        handleBookingUpdate({...booking, ...values});
+    }
+
+
+    return (
+        <div className="mt-4">
+            <h1>Edit booking</h1>
+            <Formik
+                initialValues={{
+                    roomId: booking.roomId,
+                    guestId: booking.guestId,
+                    checkInDate: booking.checkInDate,
+                    checkOutDate: booking.checkOutDate,
+                }}
+                validationSchema={SignupSchema}
+                onSubmit={handleSubmit}
+            >
+                {({errors, touched}) => (
+                    <Form className={"form-group"}>
+                        <div className="input-wrapper">
+                            <Field className="form-control" placeholder="roomId" name="roomId" type="number"/>
+                            {errors.roomId && touched.roomId ? <div>{errors.roomId}</div> : null}
+                        </div>
+                        <div className="input-wrapper">
+                            <Field className="form-control" placeholder="GuestId" name="guestId" type="number"/>
+                            {errors.guestId && touched.guestId ? <div>{errors.guestId}</div> : null}
+                        </div>
+                        <div className="input-wrapper">
+                            <Field className="form-control" placeholder="Check In Date" name="checkInDate" type="date"/>
+                            {errors.checkInDate && touched.checkInDate ? <div>{errors.checkInDate}</div> : null}
+                        </div>
+                        <div className="input-wrapper">
+                            <Field className="form-control" placeholder="Check Out Date" name="checkOutDate" type="date"/>
+                            {errors.checkOutDate && touched.checkOutDate ? <div>{errors.checkOutDate}</div> : null}
+                        </div>
+                        <Button type="submit">Submit</Button>
+
+                    </Form>
+                )}
+            </Formik>
+
+        </div>
+    );
+}
+
+export default BookingEditForm;
Index: src/components/common/Toasts/AddedSucessToast.js
===================================================================
diff --git a/src/components/common/Toasts/AddedSucessToast.js b/src/components/common/Toasts/AddedSucessToast.js
new file mode 100644
--- /dev/null	
+++ b/src/components/common/Toasts/AddedSucessToast.js	
@@ -0,0 +1,18 @@
+import React from "react";
+import { Toast } from "react-bootstrap";
+
+function AddedSuccessToast({ show, onClose }) {
+    return (
+        <Toast
+            bg={"success"}
+            onClose={onClose}
+            show={show}
+            delay={3000}
+            autohide
+        >
+            <Toast.Body>Booking was created successfully</Toast.Body>
+        </Toast>
+    );
+}
+
+export default AddedSuccessToast;
Index: src/components/common/Toasts/RoomUnavailableToast.js
===================================================================
diff --git a/src/components/common/Toasts/RoomUnavailableToast.js b/src/components/common/Toasts/RoomUnavailableToast.js
new file mode 100644
--- /dev/null	
+++ b/src/components/common/Toasts/RoomUnavailableToast.js	
@@ -0,0 +1,18 @@
+import React from "react";
+import { Toast } from "react-bootstrap";
+
+function RoomUnavailableToast({ show, onClose }) {
+    return (
+        <Toast
+            bg={"danger"}
+            onClose={onClose}
+            show={show}
+            delay={8000}
+            autohide
+        >
+            <Toast.Body>The room is not available at the specific time</Toast.Body>
+        </Toast>
+    );
+}
+
+export default RoomUnavailableToast;
Index: src/components/common/Toasts/EditedSuccessToast.js
===================================================================
diff --git a/src/components/common/Toasts/EditedSuccessToast.js b/src/components/common/Toasts/EditedSuccessToast.js
new file mode 100644
--- /dev/null	
+++ b/src/components/common/Toasts/EditedSuccessToast.js	
@@ -0,0 +1,18 @@
+import React from "react";
+import { Toast } from "react-bootstrap";
+
+function EditedSuccessToast({ show, onClose }) {
+    return (
+        <Toast
+            bg={"success"}
+            onClose={onClose}
+            show={show}
+            delay={8000}
+            autohide
+        >
+            <Toast.Body>Booking was updated successfully</Toast.Body>
+        </Toast>
+    );
+}
+
+export default EditedSuccessToast;
Index: .idea/inspectionProfiles/Project_Default.xml
===================================================================
diff --git a/.idea/inspectionProfiles/Project_Default.xml b/.idea/inspectionProfiles/Project_Default.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/inspectionProfiles/Project_Default.xml	
@@ -0,0 +1,6 @@
+<component name="InspectionProjectProfileManager">
+  <profile version="1.0">
+    <option name="myName" value="Project Default" />
+    <inspection_tool class="Eslint" enabled="true" level="WARNING" enabled_by_default="true" />
+  </profile>
+</component>
\ No newline at end of file
Index: src/view/Bookings/BookingAddView.js
===================================================================
diff --git a/src/view/Bookings/BookingAddView.js b/src/view/Bookings/BookingAddView.js
new file mode 100644
--- /dev/null	
+++ b/src/view/Bookings/BookingAddView.js	
@@ -0,0 +1,52 @@
+import React, {useState} from "react";
+import {Spinner, ToastContainer} from "react-bootstrap";
+import {addBooking} from "../../client/BookingApiClient";
+import BookingAddForm from "../../components/Bookings/BookingAddForm";
+import AddedSucessToast from "../../components/common/Toasts/AddedSucessToast";
+import RoomUnavailableToast from "../../components/common/Toasts/RoomUnavailableToast";
+
+function BookingAddView() {
+    const [showGoodToast, setShowGoodToast] = useState(false);
+    const [showBadToast, setShowBadToast] = useState(false);
+    const [loading, setLoading] = useState(false);
+    const [booking, setBooking] = useState({
+        roomId: '',
+        guestId: '',
+        checkInDate: '',
+        checkOutDate: '',
+        errorMessage: '',
+    });
+
+    const handleBookingAdd = async (newBookingData) => {
+        try {
+            setLoading(true);
+            const createdBooking = await addBooking(newBookingData);
+            if (!createdBooking.errorMessage) {
+                console.log(createdBooking);
+                setShowGoodToast(true);
+            } else {
+                setShowBadToast(true);
+            }
+        } catch (error) {
+            console.error("Error adding booking:", error);
+        } finally {
+            setLoading(false);
+        }
+    };
+
+    return (
+        <div className="text-center">
+            <ToastContainer position="top-end" className="p-3" style={{zIndex: 1}}>
+                <AddedSucessToast show={showGoodToast} onClose={() => setShowGoodToast(false)}/>
+                <RoomUnavailableToast show={showBadToast} onClose={() => setShowBadToast(false)}/>
+            </ToastContainer>
+            {loading ? (
+                <Spinner animation="border"/>
+            ) : (
+                <BookingAddForm handleBookingAdd={handleBookingAdd} booking={booking}/>
+            )}
+        </div>
+    );
+}
+
+export default BookingAddView;
Index: src/components/Bookings/BookingAddForm.js
===================================================================
diff --git a/src/components/Bookings/BookingAddForm.js b/src/components/Bookings/BookingAddForm.js
new file mode 100644
--- /dev/null	
+++ b/src/components/Bookings/BookingAddForm.js	
@@ -0,0 +1,97 @@
+import React from "react";
+import { Field, Form, Formik } from "formik";
+import * as Yup from "yup";
+import { Button } from "react-bootstrap";
+
+const BookingAddForm = ({ handleBookingAdd }) => {
+    const validationSchema = Yup.object().shape({
+        roomId: Yup.number()
+            .min(0, "RoomCard ID cannot be negative")
+            .required("RoomCard ID is required"),
+        guestId: Yup.number()
+            .min(0, "Guest ID cannot be negative")
+            .required("Guest ID is required"),
+        checkInDate: Yup.date().required("Check-in date is required"),
+        checkOutDate: Yup.date().required("Check-out date is required"),
+    });
+
+    const initialValues = {
+        roomId: "",
+        guestId: "",
+        checkInDate: "",
+        checkOutDate: "",
+    };
+
+    const handleSubmit = async (values, { setSubmitting }) => {
+        try {
+            await handleBookingAdd(values);
+        } catch (error) {
+            console.error("Error adding booking:", error);
+        } finally {
+            setSubmitting(false);
+        }
+    };
+
+    return (
+        <div className="mt-4">
+            <h1>Add Booking</h1>
+            <Formik
+                initialValues={initialValues}
+                validationSchema={validationSchema}
+                onSubmit={handleSubmit}
+            >
+                {({ errors, touched, isSubmitting }) => (
+                    <Form>
+                        <div className="input-wrapper">
+                            <Field
+                                className="form-control"
+                                name="roomId"
+                                type="number"
+                                placeholder="Enter RoomCard ID"
+                            />
+                            {errors.roomId && touched.roomId && (
+                                <div className="error">{errors.roomId}</div>
+                            )}
+                        </div>
+                        <div className="input-wrapper">
+                            <Field
+                                className="form-control"
+                                name="guestId"
+                                type="number"
+                                placeholder="Enter Guest ID"
+                            />
+                            {errors.guestId && touched.guestId && (
+                                <div className="error">{errors.guestId}</div>
+                            )}
+                        </div>
+                        <div className="input-wrapper">
+                            <Field
+                                className="form-control"
+                                name="checkInDate"
+                                type="date"
+                            />
+                            {errors.checkInDate && touched.checkInDate && (
+                                <div className="error">{errors.checkInDate}</div>
+                            )}
+                        </div>
+                        <div className="input-wrapper">
+                            <Field
+                                className="form-control"
+                                name="checkOutDate"
+                                type="date"
+                            />
+                            {errors.checkOutDate && touched.checkOutDate && (
+                                <div className="error">{errors.checkOutDate}</div>
+                            )}
+                        </div>
+                        <Button type="submit" disabled={isSubmitting}>
+                            Submit
+                        </Button>
+                    </Form>
+                )}
+            </Formik>
+        </div>
+    );
+};
+
+export default BookingAddForm;
Index: .idea/vcs.xml
===================================================================
diff --git a/.idea/vcs.xml b/.idea/vcs.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/vcs.xml	
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="VcsDirectoryMappings">
+    <mapping directory="$PROJECT_DIR$" vcs="Git" />
+  </component>
+</project>
\ No newline at end of file
Index: src/components/Bookings/BookingsCard.js
===================================================================
diff --git a/src/components/Bookings/BookingsCard.js b/src/components/Bookings/BookingsCard.js
new file mode 100644
--- /dev/null	
+++ b/src/components/Bookings/BookingsCard.js	
@@ -0,0 +1,24 @@
+import {Button, Card} from "react-bootstrap";
+
+function BookingsCard({booking, handleOnDelete, handleOnEdit}) {
+
+    return (
+        <Card style={{width: '17rem'}}>
+            <Card.Body>
+                <Card.Title>BOOKING NUMBER {booking.id}</Card.Title>
+                <Card.Subtitle className="mb-2 text-muted">Room ID: {booking.roomId}</Card.Subtitle>
+                <Card.Subtitle className="mb-2 text-muted">Guest ID: {booking.guestId}</Card.Subtitle>
+                <Card.Text>
+                    Date of arrival: {booking.checkInDate} <br/>
+                    Date of going out: {booking.checkOutDate}
+                </Card.Text>
+                <div className="d-flex justify-content-between">
+                    <Button onClick={() => handleOnEdit(booking.id)} >Edit</Button>
+                    <Button variant="danger" onClick={() => handleOnDelete(booking.id)} >Delete</Button>
+                </div>
+            </Card.Body>
+        </Card>
+    );
+}
+
+export default BookingsCard;
Index: src/components/common/MainPage/MainPage.css
===================================================================
diff --git a/src/components/common/MainPage/MainPage.css b/src/components/common/MainPage/MainPage.css
new file mode 100644
--- /dev/null	
+++ b/src/components/common/MainPage/MainPage.css	
@@ -0,0 +1,9 @@
+.app-heading {
+    text-align: center;
+    padding: 20px;
+    font-family: 'Roboto', sans-serif;
+    font-weight: bold;
+    font-size: 3rem;
+    color: #333;
+    text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.3);
+}
Index: src/components/Rooms/RoomCard.js
===================================================================
diff --git a/src/components/Rooms/RoomCard.js b/src/components/Rooms/RoomCard.js
new file mode 100644
--- /dev/null	
+++ b/src/components/Rooms/RoomCard.js	
@@ -0,0 +1,21 @@
+import {Button, Card} from "react-bootstrap";
+
+function RoomCard({room, handleOnDelete}) {
+
+    return (
+        <Card style={{width: '15rem'}}>
+            <Card.Body>
+                <Card.Title>ROOM {room.id}</Card.Title>
+                <Card.Subtitle className="mb-2 text-muted">Type of room: {room.roomType}</Card.Subtitle>
+                <Card.Text>
+                    Price: {room.price}$
+                </Card.Text>
+                <div className="d-flex justify-content-between">
+                    <Button variant="danger" onClick={() => handleOnDelete(room.id)} >Delete</Button>
+                </div>
+            </Card.Body>
+        </Card>
+    );
+}
+
+export default RoomCard;
Index: src/view/Rooms/AllRoomsView.js
===================================================================
diff --git a/src/view/Rooms/AllRoomsView.js b/src/view/Rooms/AllRoomsView.js
new file mode 100644
--- /dev/null	
+++ b/src/view/Rooms/AllRoomsView.js	
@@ -0,0 +1,45 @@
+import {useEffect, useState} from "react";
+import {Col, Row, Spinner} from "react-bootstrap";
+import RoomCard from "../../components/Rooms/RoomCard";
+import {deleteRoomById, getAllRooms} from "../../client/RoomApiClient";
+function AllRoomsView() {
+
+    const [rooms, setRooms] = useState();
+
+    const handleRoomDelete = async (id) => {
+        await deleteRoomById(id)
+        setRooms((prev) => {
+            return  prev.filter(room => room.id !== id)
+        })
+    }
+
+    const loadRooms = async () => {
+        setRooms(await getAllRooms())
+    }
+
+    useEffect(() => {
+        loadRooms()
+    }, [])
+
+    return (
+        <Row className="justify-content-center">
+            {rooms ?
+                (<>{rooms.map(room => {
+                    return (
+                        <Col key={`product-card-${room.id}`} sm={12} md={4}
+                             className="d-flex justify-content-center">
+                            <div className="mt-4">
+                                <RoomCard handleOnDelete={handleRoomDelete}
+                                          room={room}/>
+                            </div>
+                        </Col>
+                    );
+                })}
+                </>)
+                : (<Spinner animation="border"/>)}
+
+        </Row>
+    );
+}
+
+export default AllRoomsView;
